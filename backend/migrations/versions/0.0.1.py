from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "0.0.1"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("email", sa.String(length=128), nullable=False),
        sa.Column("phone", sa.String(length=16), nullable=False),
        sa.Column("username", sa.String(length=128), nullable=False),
        sa.Column("password", sa.String(length=256), nullable=False),
        sa.Column("status", sa.Enum("ACTIVE", "FORBIDDEN", name="userstatusenum"), nullable=False),
        sa.Column("nickname", sa.String(length=256), nullable=False, comment="昵称"),
        sa.Column("gender", sa.String(length=16), nullable=False, comment="性别：male, female, unknown"),
        sa.Column("display_language", sa.String(length=16), nullable=False, comment="规划结果展示语言"),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("preferred_transport_modes", sa.JSON(), nullable=False, comment="偏好交通方式"),
        sa.Column("accommodation_level", sa.Integer(), nullable=False, comment="住宿标准 1-5星"),
        sa.Column("activity_preferences", sa.JSON(), nullable=False, comment="活动类型偏好"),
        sa.Column("attraction_categories", sa.JSON(), nullable=False, comment="景点类型偏好"),
        sa.Column("travel_style", sa.String(length=32), nullable=False, comment="旅游风格：休闲型、平衡型、紧凑型"),
        sa.Column("budget_min", sa.Integer(), nullable=False, comment="最低预算"),
        sa.Column("budget_max", sa.Integer(), nullable=False, comment="最高预算"),
        sa.Column(
            "budget_flexibility",
            sa.String(length=32),
            nullable=False,
            comment="预算灵活性：节俭为主、性价比优先、舒适为主",
        ),
        sa.Column("dietary_restrictions", sa.JSON(), nullable=False, comment="饮食限制"),
        sa.Column("group_travel_preference", sa.TEXT(), nullable=False, comment="出行类型：独行、情侣、家庭、朋友"),
        sa.Column("custom_preferences", sa.TEXT(), nullable=False, comment="附加的需求"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "planning_multi_task",
        sa.Column("nodes_schedule", sa.JSON(), nullable=False, comment="节点信息 - 详细的时间和城市安排"),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False, comment="规划标题"),
        sa.Column("source", sa.String(length=128), nullable=False, comment="出发地"),
        sa.Column("departure_date", sa.DateTime(timezone=True), nullable=False, comment="出发日期"),
        sa.Column("return_date", sa.DateTime(timezone=True), nullable=False, comment="返程日期"),
        sa.Column("group_size", sa.Integer(), nullable=False, comment="出行人数"),
        sa.Column("transport_mode", sa.String(length=16), nullable=False, comment="主要交通方式"),
        sa.Column(
            "status", sa.String(length=16), nullable=False, comment="规划状态: pending, processing, completed, failed"
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("preferred_transport_modes", sa.JSON(), nullable=False, comment="偏好交通方式"),
        sa.Column("accommodation_level", sa.Integer(), nullable=False, comment="住宿标准 1-5星"),
        sa.Column("activity_preferences", sa.JSON(), nullable=False, comment="活动类型偏好"),
        sa.Column("attraction_categories", sa.JSON(), nullable=False, comment="景点类型偏好"),
        sa.Column("travel_style", sa.String(length=32), nullable=False, comment="旅游风格：休闲型、平衡型、紧凑型"),
        sa.Column("budget_min", sa.Integer(), nullable=False, comment="最低预算"),
        sa.Column("budget_max", sa.Integer(), nullable=False, comment="最高预算"),
        sa.Column(
            "budget_flexibility",
            sa.String(length=32),
            nullable=False,
            comment="预算灵活性：节俭为主、性价比优先、舒适为主",
        ),
        sa.Column("dietary_restrictions", sa.JSON(), nullable=False, comment="饮食限制"),
        sa.Column("group_travel_preference", sa.TEXT(), nullable=False, comment="出行类型：独行、情侣、家庭、朋友"),
        sa.Column("custom_preferences", sa.TEXT(), nullable=False, comment="附加的需求"),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "planning_route_task",
        sa.Column("target", sa.String(length=128), nullable=False, comment="目的地"),
        sa.Column("max_stopovers", sa.Integer(), nullable=False, comment="最多停留次数：沿途最多可以停留几次"),
        sa.Column(
            "max_stopover_duration",
            sa.Integer(),
            nullable=False,
            comment="计划停留时长：每个途径点最多游玩多久（小时）",
        ),
        sa.Column(
            "route_preference", sa.String(), nullable=False, comment="路线偏好：速度优先, 风景优先, 经济优先, 平衡"
        ),
        sa.Column("max_detour_distance", sa.Integer(), nullable=False, comment="最大绕行距离(km)"),
        sa.Column("preferred_stop_types", sa.JSON(), nullable=False, comment="偏好停留类型"),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False, comment="规划标题"),
        sa.Column("source", sa.String(length=128), nullable=False, comment="出发地"),
        sa.Column("departure_date", sa.DateTime(timezone=True), nullable=False, comment="出发日期"),
        sa.Column("return_date", sa.DateTime(timezone=True), nullable=False, comment="返程日期"),
        sa.Column("group_size", sa.Integer(), nullable=False, comment="出行人数"),
        sa.Column("transport_mode", sa.String(length=16), nullable=False, comment="主要交通方式"),
        sa.Column(
            "status", sa.String(length=16), nullable=False, comment="规划状态: pending, processing, completed, failed"
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("preferred_transport_modes", sa.JSON(), nullable=False, comment="偏好交通方式"),
        sa.Column("accommodation_level", sa.Integer(), nullable=False, comment="住宿标准 1-5星"),
        sa.Column("activity_preferences", sa.JSON(), nullable=False, comment="活动类型偏好"),
        sa.Column("attraction_categories", sa.JSON(), nullable=False, comment="景点类型偏好"),
        sa.Column("travel_style", sa.String(length=32), nullable=False, comment="旅游风格：休闲型、平衡型、紧凑型"),
        sa.Column("budget_min", sa.Integer(), nullable=False, comment="最低预算"),
        sa.Column("budget_max", sa.Integer(), nullable=False, comment="最高预算"),
        sa.Column(
            "budget_flexibility",
            sa.String(length=32),
            nullable=False,
            comment="预算灵活性：节俭为主、性价比优先、舒适为主",
        ),
        sa.Column("dietary_restrictions", sa.JSON(), nullable=False, comment="饮食限制"),
        sa.Column("group_travel_preference", sa.TEXT(), nullable=False, comment="出行类型：独行、情侣、家庭、朋友"),
        sa.Column("custom_preferences", sa.TEXT(), nullable=False, comment="附加的需求"),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "planning_single_task",
        sa.Column("target", sa.String(length=128), nullable=False, comment="目的地"),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False, comment="规划标题"),
        sa.Column("source", sa.String(length=128), nullable=False, comment="出发地"),
        sa.Column("departure_date", sa.DateTime(timezone=True), nullable=False, comment="出发日期"),
        sa.Column("return_date", sa.DateTime(timezone=True), nullable=False, comment="返程日期"),
        sa.Column("group_size", sa.Integer(), nullable=False, comment="出行人数"),
        sa.Column("transport_mode", sa.String(length=16), nullable=False, comment="主要交通方式"),
        sa.Column(
            "status", sa.String(length=16), nullable=False, comment="规划状态: pending, processing, completed, failed"
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("preferred_transport_modes", sa.JSON(), nullable=False, comment="偏好交通方式"),
        sa.Column("accommodation_level", sa.Integer(), nullable=False, comment="住宿标准 1-5星"),
        sa.Column("activity_preferences", sa.JSON(), nullable=False, comment="活动类型偏好"),
        sa.Column("attraction_categories", sa.JSON(), nullable=False, comment="景点类型偏好"),
        sa.Column("travel_style", sa.String(length=32), nullable=False, comment="旅游风格：休闲型、平衡型、紧凑型"),
        sa.Column("budget_min", sa.Integer(), nullable=False, comment="最低预算"),
        sa.Column("budget_max", sa.Integer(), nullable=False, comment="最高预算"),
        sa.Column(
            "budget_flexibility",
            sa.String(length=32),
            nullable=False,
            comment="预算灵活性：节俭为主、性价比优先、舒适为主",
        ),
        sa.Column("dietary_restrictions", sa.JSON(), nullable=False, comment="饮食限制"),
        sa.Column("group_travel_preference", sa.TEXT(), nullable=False, comment="出行类型：独行、情侣、家庭、朋友"),
        sa.Column("custom_preferences", sa.TEXT(), nullable=False, comment="附加的需求"),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "planning_smart_task",
        sa.Column("max_travel_distance", sa.Integer(), nullable=False, comment="最大出行距离(km)"),
        sa.Column("preferred_environment", sa.String(), nullable=False, comment="环境偏好"),
        sa.Column("avoid_regions", sa.JSON(), nullable=False, comment="避免的地区"),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False, comment="规划标题"),
        sa.Column("source", sa.String(length=128), nullable=False, comment="出发地"),
        sa.Column("departure_date", sa.DateTime(timezone=True), nullable=False, comment="出发日期"),
        sa.Column("return_date", sa.DateTime(timezone=True), nullable=False, comment="返程日期"),
        sa.Column("group_size", sa.Integer(), nullable=False, comment="出行人数"),
        sa.Column("transport_mode", sa.String(length=16), nullable=False, comment="主要交通方式"),
        sa.Column(
            "status", sa.String(length=16), nullable=False, comment="规划状态: pending, processing, completed, failed"
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("preferred_transport_modes", sa.JSON(), nullable=False, comment="偏好交通方式"),
        sa.Column("accommodation_level", sa.Integer(), nullable=False, comment="住宿标准 1-5星"),
        sa.Column("activity_preferences", sa.JSON(), nullable=False, comment="活动类型偏好"),
        sa.Column("attraction_categories", sa.JSON(), nullable=False, comment="景点类型偏好"),
        sa.Column("travel_style", sa.String(length=32), nullable=False, comment="旅游风格：休闲型、平衡型、紧凑型"),
        sa.Column("budget_min", sa.Integer(), nullable=False, comment="最低预算"),
        sa.Column("budget_max", sa.Integer(), nullable=False, comment="最高预算"),
        sa.Column(
            "budget_flexibility",
            sa.String(length=32),
            nullable=False,
            comment="预算灵活性：节俭为主、性价比优先、舒适为主",
        ),
        sa.Column("dietary_restrictions", sa.JSON(), nullable=False, comment="饮食限制"),
        sa.Column("group_travel_preference", sa.TEXT(), nullable=False, comment="出行类型：独行、情侣、家庭、朋友"),
        sa.Column("custom_preferences", sa.TEXT(), nullable=False, comment="附加的需求"),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "planning_multi_result",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("nodes_details", sa.JSON(), nullable=False, comment="节点详细安排"),
        sa.Column("route_plan", sa.JSON(), nullable=False, comment="节点间的交通安排"),
        sa.Column("highlights", sa.JSON(), nullable=False, comment="行程亮点"),
        sa.Column("plan_title", sa.String(length=128), nullable=False, comment="方案标题"),
        sa.Column("plan_description", sa.TEXT(), nullable=False, comment="方案描述"),
        sa.Column("total_days", sa.Integer(), nullable=False, comment="总天数"),
        sa.Column("estimated_budget", sa.Integer(), nullable=False, comment="预估费用"),
        sa.Column("is_favorite", sa.Boolean(), nullable=False, comment="是否收藏"),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["planning_multi_task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "planning_route_result",
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("daily_plan", sa.JSON(), nullable=False, comment="每日行程"),
        sa.Column("route_plan", sa.JSON(), nullable=False, comment="详细路线信息"),
        sa.Column("waypoints", sa.JSON(), nullable=False, comment="途经点列表"),
        sa.Column("plan_title", sa.String(length=128), nullable=False, comment="方案标题"),
        sa.Column("plan_description", sa.TEXT(), nullable=False, comment="方案描述"),
        sa.Column("total_days", sa.Integer(), nullable=False, comment="总天数"),
        sa.Column("estimated_budget", sa.Integer(), nullable=False, comment="预估费用"),
        sa.Column("is_favorite", sa.Boolean(), nullable=False, comment="是否收藏"),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["planning_route_task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "planning_single_result",
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("daily_plan", sa.JSON(), nullable=False, comment="每日行程"),
        sa.Column("highlights", sa.JSON(), nullable=False, comment="行程亮点"),
        sa.Column("tips", sa.JSON(), nullable=False, comment="旅游贴士"),
        sa.Column("plan_title", sa.String(length=128), nullable=False, comment="方案标题"),
        sa.Column("plan_description", sa.TEXT(), nullable=False, comment="方案描述"),
        sa.Column("total_days", sa.Integer(), nullable=False, comment="总天数"),
        sa.Column("estimated_budget", sa.Integer(), nullable=False, comment="预估费用"),
        sa.Column("is_favorite", sa.Boolean(), nullable=False, comment="是否收藏"),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["planning_single_task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "planning_smart_result",
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("destination", sa.String(length=128), nullable=False, comment="推荐的目的地"),
        sa.Column("recommendation_reasons", sa.TEXT(), nullable=False, comment="推荐理由"),
        sa.Column("destination_highlights", sa.JSON(), nullable=False, comment="目的地亮点"),
        sa.Column("daily_plan", sa.JSON(), nullable=False, comment="每日行程"),
        sa.Column("plan_title", sa.String(length=128), nullable=False, comment="方案标题"),
        sa.Column("plan_description", sa.TEXT(), nullable=False, comment="方案描述"),
        sa.Column("total_days", sa.Integer(), nullable=False, comment="总天数"),
        sa.Column("estimated_budget", sa.Integer(), nullable=False, comment="预估费用"),
        sa.Column("is_favorite", sa.Boolean(), nullable=False, comment="是否收藏"),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["planning_smart_task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("planning_smart_result")
    op.drop_table("planning_single_result")
    op.drop_table("planning_route_result")
    op.drop_table("planning_multi_result")
    op.drop_table("planning_smart_task")
    op.drop_table("planning_single_task")
    op.drop_table("planning_route_task")
    op.drop_table("planning_multi_task")
    op.drop_table("user")
    # ### end Alembic commands ###
